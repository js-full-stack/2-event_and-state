{"version":3,"sources":["Components/Container/Container.jsx","Components/TodoList/TodoList.jsx","Components/TodoEditor/TodoEditor.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["Container","children","className","TodoList","todos","onDeleteTodo","onToggleCompleted","map","id","text","completed","type","checked","onChange","onClick","TodoEditor","state","message","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","Component","Filter","App","initialTodo","filter","addTodo","todo","shortid","generate","deleteTodo","todoId","prevState","toggleCompleted","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","getCompletedTodos","reduce","acc","totalTodoCount","length","completedTodos","visibleTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99c18d77.chunk.js","sourcesContent":["import './Container.scss';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nexport default Container;\n","import './TodoList.scss';\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => (\n  <ul className=\"TodoList\">\n    {todos.map(({ id, text, completed }) => (\n      <li key={id} className=\"TodoList__item\">\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => onToggleCompleted(id)}\n        />\n        <p className=\"TodoList__text\">{text}</p>\n        <button onClick={() => onDeleteTodo(id)}>Удалить</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import { Component } from 'react';\nimport './TodoEditor.scss';\n\nclass TodoEditor extends Component {\n  state = {\n    message: '',\n  };\n\n  handleChange = event => {\n    this.setState({ message: event.currentTarget.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.message);\n    this.setState({ message: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n        <textarea\n          className=\"TodoEditor__textarea\"\n          value={this.state.message}\n          onChange={this.handleChange}\n        ></textarea>\n        <button type=\"submit\" className=\"TodoEditor__button\">\n          Добавить\n        </button>\n      </form>\n    );\n  }\n}\nexport default TodoEditor;\n","const Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Фильтр по имени <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Container from './Components/Container';\n// import Form from './Components/Form';\n// import Counter from './Components/Counter';\n// import Dropdown from './Components//Dropdown';\n// import ColorPicker from './Components/ColorPicker/index';\nimport TodoList from './Components/TodoList';\nimport TodoEditor from './Components/TodoEditor';\nimport Filter from './Components/Filter';\nimport initialTodo from './Components/TodoList/Todos.json';\n\nclass App extends Component {\n  state = {\n    todos: initialTodo,\n    filter: '',\n  };\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  toggleCompleted = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  getCompletedTodos = () => {\n    const { todos } = this.state;\n    return todos.reduce((acc, todo) => (todo.completed ? acc + 1 : acc), 0);\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const totalTodoCount = todos.length;\n    const completedTodos = this.getCompletedTodos();\n    const visibleTodos = this.getVisibleTodos();\n\n    // console.log(completedTodos);\n    return (\n      <Container>\n        <Filter value={filter} onChange={this.changeFilter} />\n        {\n          /* <div className=\"App\">\n          <header className=\"App-header\"></header>*/\n          <div>\n            <p>Количество задач: {totalTodoCount}</p>\n            <p>Выполненные задачи:{completedTodos} </p>\n          </div>\n        }\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n        {\n          <TodoEditor onSubmit={this.addTodo} />\n          /* <Counter initialValue={10} />\n        <Dropdown />*/\n          // <ColorPicker options={colorPickerOptions} />\n        }\n        {/* </div> */}\n        {/* <Form onSubmit={this.formSubmitHandler} /> */}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n\n// const colorPickerOptions = [\n//   { label: 'red', color: '#F44336' },\n//   { label: 'green', color: '#4CAF50' },\n//   { label: 'blue', color: '#2196F3' },\n//   { label: 'grey', color: '#607D8B' },\n//   { label: 'pink', color: '#E91E63' },\n//   { label: 'indigo', color: '#3F51B5' },\n// ];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './basic.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}